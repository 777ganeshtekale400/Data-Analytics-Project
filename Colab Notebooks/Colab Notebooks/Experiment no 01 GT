{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO1l4/byue50DMEoqXXjEPC"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## JSPMS Jayawantrao Sawant College of Engineering Hadapsar\n","## Mechanical Engineering Department\n","## Data Analytics Lab\n","## Experiment No       : 01\n","## Date of Conduction  : 25 Jul 2023\n","## Name of Faculty     : Prof. Mahesh Shinde\n","## Name of Student     : Ganesh Anjaram Tekale\n","## Roll No             : 4261\n","## Name of Experiment  : To Perform Exploratory Data Analysis on Automobile Data\n"],"metadata":{"id":"h78IhMFswgX7"}},{"cell_type":"markdown","source":["# **Step 1 Define Libraries**"],"metadata":{"id":"uoXrpNxGwhk7"}},{"cell_type":"code","source":[],"metadata":{"id":"McQ-ggbSxr86"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt"],"metadata":{"id":"lA6o5gklwnsD","executionInfo":{"status":"ok","timestamp":1696407989042,"user_tz":-330,"elapsed":1441,"user":{"displayName":"Ganesh Tekale","userId":"18033307216629587681"}}},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":["# **Step 2 Data Loading**"],"metadata":{"id":"0bJw_f5Nwx2r"}},{"cell_type":"code","source":["from google.colab import files\n","uploaded=files.upload()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":73},"id":"30DcMmqow6-C","executionInfo":{"status":"ok","timestamp":1696407926173,"user_tz":-330,"elapsed":7243,"user":{"displayName":"Ganesh Tekale","userId":"18033307216629587681"}},"outputId":"c9f25426-a88d-4bc4-88c1-fcd5cb82658e"},"execution_count":3,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-a20f8bff-e842-4892-914c-8388b6c98eff\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-a20f8bff-e842-4892-914c-8388b6c98eff\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving Expt 1 Datasheet.csv to Expt 1 Datasheet.csv\n"]}]},{"cell_type":"markdown","source":["# **Step3 Check Dataset**"],"metadata":{"id":"KCm9q0J8yQiN"}},{"cell_type":"code","source":["df_automobile=pd.read_csv(\"Expt 1 Datasheet.csv\")\n","print(df_automobile)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"GSw7G5nlyray","executionInfo":{"status":"ok","timestamp":1696407993466,"user_tz":-330,"elapsed":380,"user":{"displayName":"Ganesh Tekale","userId":"18033307216629587681"}},"outputId":"622b227a-4f9c-4c87-98e4-c50aff7e92ca"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["     symboling  normalized-losses         make aspiration num-of-doors  \\\n","0            3                122  alfa-romero        std          two   \n","1            3                122  alfa-romero        std          two   \n","2            1                122  alfa-romero        std          two   \n","3            2                164         audi        std         four   \n","4            2                164         audi        std         four   \n","..         ...                ...          ...        ...          ...   \n","196         -1                 95        volvo        std         four   \n","197         -1                 95        volvo      turbo         four   \n","198         -1                 95        volvo        std         four   \n","199         -1                 95        volvo      turbo         four   \n","200         -1                 95        volvo      turbo         four   \n","\n","      body-style drive-wheels engine-location  wheel-base    length  ...  \\\n","0    convertible          rwd           front        88.6  0.811148  ...   \n","1    convertible          rwd           front        88.6  0.811148  ...   \n","2      hatchback          rwd           front        94.5  0.822681  ...   \n","3          sedan          fwd           front        99.8  0.848630  ...   \n","4          sedan          4wd           front        99.4  0.848630  ...   \n","..           ...          ...             ...         ...       ...  ...   \n","196        sedan          rwd           front       109.1  0.907256  ...   \n","197        sedan          rwd           front       109.1  0.907256  ...   \n","198        sedan          rwd           front       109.1  0.907256  ...   \n","199        sedan          rwd           front       109.1  0.907256  ...   \n","200        sedan          rwd           front       109.1  0.907256  ...   \n","\n","     compression-ratio  horsepower  peak-rpm city-mpg highway-mpg  price  \\\n","0                  9.0       111.0    5000.0       21          27  13495   \n","1                  9.0       111.0    5000.0       21          27  16500   \n","2                  9.0       154.0    5000.0       19          26  16500   \n","3                 10.0       102.0    5500.0       24          30  13950   \n","4                  8.0       115.0    5500.0       18          22  17450   \n","..                 ...         ...       ...      ...         ...    ...   \n","196                9.5       114.0    5400.0       23          28  16845   \n","197                8.7       160.0    5300.0       19          25  19045   \n","198                8.8       134.0    5500.0       18          23  21485   \n","199               23.0       106.0    4800.0       26          27  22470   \n","200                9.5       114.0    5400.0       19          25  22625   \n","\n","    city-L/100km  horsepower-binned  diesel  gas  \n","0      11.190476             Medium       0    1  \n","1      11.190476             Medium       0    1  \n","2      12.368421             Medium       0    1  \n","3       9.791667             Medium       0    1  \n","4      13.055556             Medium       0    1  \n","..           ...                ...     ...  ...  \n","196    10.217391             Medium       0    1  \n","197    12.368421               High       0    1  \n","198    13.055556             Medium       0    1  \n","199     9.038462             Medium       1    0  \n","200    12.368421             Medium       0    1  \n","\n","[201 rows x 29 columns]\n"]}]},{"cell_type":"code","source":["df_automobile.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":342},"id":"_2EGtQmezAlK","executionInfo":{"status":"ok","timestamp":1696408016218,"user_tz":-330,"elapsed":8,"user":{"displayName":"Ganesh Tekale","userId":"18033307216629587681"}},"outputId":"b024cb36-183c-4757-bf65-7b75cc8805f3"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   symboling  normalized-losses         make aspiration num-of-doors  \\\n","0          3                122  alfa-romero        std          two   \n","1          3                122  alfa-romero        std          two   \n","2          1                122  alfa-romero        std          two   \n","3          2                164         audi        std         four   \n","4          2                164         audi        std         four   \n","\n","    body-style drive-wheels engine-location  wheel-base    length  ...  \\\n","0  convertible          rwd           front        88.6  0.811148  ...   \n","1  convertible          rwd           front        88.6  0.811148  ...   \n","2    hatchback          rwd           front        94.5  0.822681  ...   \n","3        sedan          fwd           front        99.8  0.848630  ...   \n","4        sedan          4wd           front        99.4  0.848630  ...   \n","\n","   compression-ratio  horsepower  peak-rpm city-mpg highway-mpg  price  \\\n","0                9.0       111.0    5000.0       21          27  13495   \n","1                9.0       111.0    5000.0       21          27  16500   \n","2                9.0       154.0    5000.0       19          26  16500   \n","3               10.0       102.0    5500.0       24          30  13950   \n","4                8.0       115.0    5500.0       18          22  17450   \n","\n","  city-L/100km  horsepower-binned  diesel  gas  \n","0    11.190476             Medium       0    1  \n","1    11.190476             Medium       0    1  \n","2    12.368421             Medium       0    1  \n","3     9.791667             Medium       0    1  \n","4    13.055556             Medium       0    1  \n","\n","[5 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-86e59386-a9d2-494a-87f2-d471869991d8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symboling</th>\n","      <th>normalized-losses</th>\n","      <th>make</th>\n","      <th>aspiration</th>\n","      <th>num-of-doors</th>\n","      <th>body-style</th>\n","      <th>drive-wheels</th>\n","      <th>engine-location</th>\n","      <th>wheel-base</th>\n","      <th>length</th>\n","      <th>...</th>\n","      <th>compression-ratio</th>\n","      <th>horsepower</th>\n","      <th>peak-rpm</th>\n","      <th>city-mpg</th>\n","      <th>highway-mpg</th>\n","      <th>price</th>\n","      <th>city-L/100km</th>\n","      <th>horsepower-binned</th>\n","      <th>diesel</th>\n","      <th>gas</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>122</td>\n","      <td>alfa-romero</td>\n","      <td>std</td>\n","      <td>two</td>\n","      <td>convertible</td>\n","      <td>rwd</td>\n","      <td>front</td>\n","      <td>88.6</td>\n","      <td>0.811148</td>\n","      <td>...</td>\n","      <td>9.0</td>\n","      <td>111.0</td>\n","      <td>5000.0</td>\n","      <td>21</td>\n","      <td>27</td>\n","      <td>13495</td>\n","      <td>11.190476</td>\n","      <td>Medium</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>122</td>\n","      <td>alfa-romero</td>\n","      <td>std</td>\n","      <td>two</td>\n","      <td>convertible</td>\n","      <td>rwd</td>\n","      <td>front</td>\n","      <td>88.6</td>\n","      <td>0.811148</td>\n","      <td>...</td>\n","      <td>9.0</td>\n","      <td>111.0</td>\n","      <td>5000.0</td>\n","      <td>21</td>\n","      <td>27</td>\n","      <td>16500</td>\n","      <td>11.190476</td>\n","      <td>Medium</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>122</td>\n","      <td>alfa-romero</td>\n","      <td>std</td>\n","      <td>two</td>\n","      <td>hatchback</td>\n","      <td>rwd</td>\n","      <td>front</td>\n","      <td>94.5</td>\n","      <td>0.822681</td>\n","      <td>...</td>\n","      <td>9.0</td>\n","      <td>154.0</td>\n","      <td>5000.0</td>\n","      <td>19</td>\n","      <td>26</td>\n","      <td>16500</td>\n","      <td>12.368421</td>\n","      <td>Medium</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>164</td>\n","      <td>audi</td>\n","      <td>std</td>\n","      <td>four</td>\n","      <td>sedan</td>\n","      <td>fwd</td>\n","      <td>front</td>\n","      <td>99.8</td>\n","      <td>0.848630</td>\n","      <td>...</td>\n","      <td>10.0</td>\n","      <td>102.0</td>\n","      <td>5500.0</td>\n","      <td>24</td>\n","      <td>30</td>\n","      <td>13950</td>\n","      <td>9.791667</td>\n","      <td>Medium</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>164</td>\n","      <td>audi</td>\n","      <td>std</td>\n","      <td>four</td>\n","      <td>sedan</td>\n","      <td>4wd</td>\n","      <td>front</td>\n","      <td>99.4</td>\n","      <td>0.848630</td>\n","      <td>...</td>\n","      <td>8.0</td>\n","      <td>115.0</td>\n","      <td>5500.0</td>\n","      <td>18</td>\n","      <td>22</td>\n","      <td>17450</td>\n","      <td>13.055556</td>\n","      <td>Medium</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-86e59386-a9d2-494a-87f2-d471869991d8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-86e59386-a9d2-494a-87f2-d471869991d8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-86e59386-a9d2-494a-87f2-d471869991d8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d2fd0893-7aa6-4e65-985c-ec49cb4a6725\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d2fd0893-7aa6-4e65-985c-ec49cb4a6725')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d2fd0893-7aa6-4e65-985c-ec49cb4a6725 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df_automobile.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"JHJ9iU6kzHYa","executionInfo":{"status":"ok","timestamp":1696408044594,"user_tz":-330,"elapsed":565,"user":{"displayName":"Ganesh Tekale","userId":"18033307216629587681"}},"outputId":"b53af1e6-4490-466c-a25f-ba53f61c82d0"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(201, 29)"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["# **Step 4 Dataset Cleaning**"],"metadata":{"id":"r6ld0OQozMYC"}},{"cell_type":"code","source":["df_data=df_automobile.replace('?',np.NAN)\n","df_data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"3NV3g2b0zWEC","executionInfo":{"status":"ok","timestamp":1696408111169,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ganesh Tekale","userId":"18033307216629587681"}},"outputId":"941bd531-4d1c-4892-edfb-99676e816059"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["symboling            0\n","normalized-losses    0\n","make                 0\n","aspiration           0\n","num-of-doors         0\n","body-style           0\n","drive-wheels         0\n","engine-location      0\n","wheel-base           0\n","length               0\n","width                0\n","height               0\n","curb-weight          0\n","engine-type          0\n","num-of-cylinders     0\n","engine-size          0\n","fuel-system          0\n","bore                 0\n","stroke               4\n","compression-ratio    0\n","horsepower           0\n","peak-rpm             0\n","city-mpg             0\n","highway-mpg          0\n","price                0\n","city-L/100km         0\n","horsepower-binned    1\n","diesel               0\n","gas                  0\n","dtype: int64"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df_automobile['stroke'].fillna('na.nan',inplace=True)"],"metadata":{"id":"sqUuNO13zbCb","executionInfo":{"status":"ok","timestamp":1696408125212,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ganesh Tekale","userId":"18033307216629587681"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["df_automobile['horsepower-binned'].fillna('na.nan',inplace=True)"],"metadata":{"id":"z_xSIIOkzdTi","executionInfo":{"status":"ok","timestamp":1696408135593,"user_tz":-330,"elapsed":12,"user":{"displayName":"Ganesh Tekale","userId":"18033307216629587681"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["df_automobile.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"p272SSF_zniC","executionInfo":{"status":"ok","timestamp":1696408185933,"user_tz":-330,"elapsed":359,"user":{"displayName":"Ganesh Tekale","userId":"18033307216629587681"}},"outputId":"74437cb4-1f29-4490-fb45-baa7f1559823"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["symboling            0\n","normalized-losses    0\n","make                 0\n","aspiration           0\n","num-of-doors         0\n","body-style           0\n","drive-wheels         0\n","engine-location      0\n","wheel-base           0\n","length               0\n","width                0\n","height               0\n","curb-weight          0\n","engine-type          0\n","num-of-cylinders     0\n","engine-size          0\n","fuel-system          0\n","bore                 0\n","stroke               0\n","compression-ratio    0\n","horsepower           0\n","peak-rpm             0\n","city-mpg             0\n","highway-mpg          0\n","price                0\n","city-L/100km         0\n","horsepower-binned    0\n","diesel               0\n","gas                  0\n","dtype: int64"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["df_automobile.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":499},"id":"QG6eJN-zzrnC","executionInfo":{"status":"ok","timestamp":1696408192467,"user_tz":-330,"elapsed":3,"user":{"displayName":"Ganesh Tekale","userId":"18033307216629587681"}},"outputId":"603af71c-5f19-4d9d-8d60-65370709daf2"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   symboling  normalized-losses         make aspiration num-of-doors  \\\n","0          3                122  alfa-romero        std          two   \n","1          3                122  alfa-romero        std          two   \n","2          1                122  alfa-romero        std          two   \n","3          2                164         audi        std         four   \n","4          2                164         audi        std         four   \n","5          2                122         audi        std          two   \n","6          1                158         audi        std         four   \n","7          1                122         audi        std         four   \n","8          1                158         audi      turbo         four   \n","9          2                192          bmw        std          two   \n","\n","    body-style drive-wheels engine-location  wheel-base    length  ...  \\\n","0  convertible          rwd           front        88.6  0.811148  ...   \n","1  convertible          rwd           front        88.6  0.811148  ...   \n","2    hatchback          rwd           front        94.5  0.822681  ...   \n","3        sedan          fwd           front        99.8  0.848630  ...   \n","4        sedan          4wd           front        99.4  0.848630  ...   \n","5        sedan          fwd           front        99.8  0.851994  ...   \n","6        sedan          fwd           front       105.8  0.925997  ...   \n","7        wagon          fwd           front       105.8  0.925997  ...   \n","8        sedan          fwd           front       105.8  0.925997  ...   \n","9        sedan          rwd           front       101.2  0.849592  ...   \n","\n","   compression-ratio  horsepower  peak-rpm city-mpg highway-mpg  price  \\\n","0                9.0       111.0    5000.0       21          27  13495   \n","1                9.0       111.0    5000.0       21          27  16500   \n","2                9.0       154.0    5000.0       19          26  16500   \n","3               10.0       102.0    5500.0       24          30  13950   \n","4                8.0       115.0    5500.0       18          22  17450   \n","5                8.5       110.0    5500.0       19          25  15250   \n","6                8.5       110.0    5500.0       19          25  17710   \n","7                8.5       110.0    5500.0       19          25  18920   \n","8                8.3       140.0    5500.0       17          20  23875   \n","9                8.8       101.0    5800.0       23          29  16430   \n","\n","  city-L/100km  horsepower-binned diesel  gas  \n","0    11.190476             Medium      0    1  \n","1    11.190476             Medium      0    1  \n","2    12.368421             Medium      0    1  \n","3     9.791667             Medium      0    1  \n","4    13.055556             Medium      0    1  \n","5    12.368421             Medium      0    1  \n","6    12.368421             Medium      0    1  \n","7    12.368421             Medium      0    1  \n","8    13.823529             Medium      0    1  \n","9    10.217391                Low      0    1  \n","\n","[10 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-b784f248-f09b-4115-857f-279f5c31e7a2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symboling</th>\n","      <th>normalized-losses</th>\n","      <th>make</th>\n","      <th>aspiration</th>\n","      <th>num-of-doors</th>\n","      <th>body-style</th>\n","      <th>drive-wheels</th>\n","      <th>engine-location</th>\n","      <th>wheel-base</th>\n","      <th>length</th>\n","      <th>...</th>\n","      <th>compression-ratio</th>\n","      <th>horsepower</th>\n","      <th>peak-rpm</th>\n","      <th>city-mpg</th>\n","      <th>highway-mpg</th>\n","      <th>price</th>\n","      <th>city-L/100km</th>\n","      <th>horsepower-binned</th>\n","      <th>diesel</th>\n","      <th>gas</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>122</td>\n","      <td>alfa-romero</td>\n","      <td>std</td>\n","      <td>two</td>\n","      <td>convertible</td>\n","      <td>rwd</td>\n","      <td>front</td>\n","      <td>88.6</td>\n","      <td>0.811148</td>\n","      <td>...</td>\n","      <td>9.0</td>\n","      <td>111.0</td>\n","      <td>5000.0</td>\n","      <td>21</td>\n","      <td>27</td>\n","      <td>13495</td>\n","      <td>11.190476</td>\n","      <td>Medium</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>122</td>\n","      <td>alfa-romero</td>\n","      <td>std</td>\n","      <td>two</td>\n","      <td>convertible</td>\n","      <td>rwd</td>\n","      <td>front</td>\n","      <td>88.6</td>\n","      <td>0.811148</td>\n","      <td>...</td>\n","      <td>9.0</td>\n","      <td>111.0</td>\n","      <td>5000.0</td>\n","      <td>21</td>\n","      <td>27</td>\n","      <td>16500</td>\n","      <td>11.190476</td>\n","      <td>Medium</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>122</td>\n","      <td>alfa-romero</td>\n","      <td>std</td>\n","      <td>two</td>\n","      <td>hatchback</td>\n","      <td>rwd</td>\n","      <td>front</td>\n","      <td>94.5</td>\n","      <td>0.822681</td>\n","      <td>...</td>\n","      <td>9.0</td>\n","      <td>154.0</td>\n","      <td>5000.0</td>\n","      <td>19</td>\n","      <td>26</td>\n","      <td>16500</td>\n","      <td>12.368421</td>\n","      <td>Medium</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>164</td>\n","      <td>audi</td>\n","      <td>std</td>\n","      <td>four</td>\n","      <td>sedan</td>\n","      <td>fwd</td>\n","      <td>front</td>\n","      <td>99.8</td>\n","      <td>0.848630</td>\n","      <td>...</td>\n","      <td>10.0</td>\n","      <td>102.0</td>\n","      <td>5500.0</td>\n","      <td>24</td>\n","      <td>30</td>\n","      <td>13950</td>\n","      <td>9.791667</td>\n","      <td>Medium</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>164</td>\n","      <td>audi</td>\n","      <td>std</td>\n","      <td>four</td>\n","      <td>sedan</td>\n","      <td>4wd</td>\n","      <td>front</td>\n","      <td>99.4</td>\n","      <td>0.848630</td>\n","      <td>...</td>\n","      <td>8.0</td>\n","      <td>115.0</td>\n","      <td>5500.0</td>\n","      <td>18</td>\n","      <td>22</td>\n","      <td>17450</td>\n","      <td>13.055556</td>\n","      <td>Medium</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2</td>\n","      <td>122</td>\n","      <td>audi</td>\n","      <td>std</td>\n","      <td>two</td>\n","      <td>sedan</td>\n","      <td>fwd</td>\n","      <td>front</td>\n","      <td>99.8</td>\n","      <td>0.851994</td>\n","      <td>...</td>\n","      <td>8.5</td>\n","      <td>110.0</td>\n","      <td>5500.0</td>\n","      <td>19</td>\n","      <td>25</td>\n","      <td>15250</td>\n","      <td>12.368421</td>\n","      <td>Medium</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1</td>\n","      <td>158</td>\n","      <td>audi</td>\n","      <td>std</td>\n","      <td>four</td>\n","      <td>sedan</td>\n","      <td>fwd</td>\n","      <td>front</td>\n","      <td>105.8</td>\n","      <td>0.925997</td>\n","      <td>...</td>\n","      <td>8.5</td>\n","      <td>110.0</td>\n","      <td>5500.0</td>\n","      <td>19</td>\n","      <td>25</td>\n","      <td>17710</td>\n","      <td>12.368421</td>\n","      <td>Medium</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1</td>\n","      <td>122</td>\n","      <td>audi</td>\n","      <td>std</td>\n","      <td>four</td>\n","      <td>wagon</td>\n","      <td>fwd</td>\n","      <td>front</td>\n","      <td>105.8</td>\n","      <td>0.925997</td>\n","      <td>...</td>\n","      <td>8.5</td>\n","      <td>110.0</td>\n","      <td>5500.0</td>\n","      <td>19</td>\n","      <td>25</td>\n","      <td>18920</td>\n","      <td>12.368421</td>\n","      <td>Medium</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1</td>\n","      <td>158</td>\n","      <td>audi</td>\n","      <td>turbo</td>\n","      <td>four</td>\n","      <td>sedan</td>\n","      <td>fwd</td>\n","      <td>front</td>\n","      <td>105.8</td>\n","      <td>0.925997</td>\n","      <td>...</td>\n","      <td>8.3</td>\n","      <td>140.0</td>\n","      <td>5500.0</td>\n","      <td>17</td>\n","      <td>20</td>\n","      <td>23875</td>\n","      <td>13.823529</td>\n","      <td>Medium</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2</td>\n","      <td>192</td>\n","      <td>bmw</td>\n","      <td>std</td>\n","      <td>two</td>\n","      <td>sedan</td>\n","      <td>rwd</td>\n","      <td>front</td>\n","      <td>101.2</td>\n","      <td>0.849592</td>\n","      <td>...</td>\n","      <td>8.8</td>\n","      <td>101.0</td>\n","      <td>5800.0</td>\n","      <td>23</td>\n","      <td>29</td>\n","      <td>16430</td>\n","      <td>10.217391</td>\n","      <td>Low</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows × 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b784f248-f09b-4115-857f-279f5c31e7a2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b784f248-f09b-4115-857f-279f5c31e7a2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b784f248-f09b-4115-857f-279f5c31e7a2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bd772e03-a3e4-4ffd-b482-35ba010a40fc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bd772e03-a3e4-4ffd-b482-35ba010a40fc')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bd772e03-a3e4-4ffd-b482-35ba010a40fc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["# **Step 5 Summary Statistics of Variable**"],"metadata":{"id":"hrWZk4hBzuui"}},{"cell_type":"code","source":["df_automobile.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":338},"id":"nUKMit35zyPS","executionInfo":{"status":"ok","timestamp":1696408229949,"user_tz":-330,"elapsed":934,"user":{"displayName":"Ganesh Tekale","userId":"18033307216629587681"}},"outputId":"7da59263-3c8d-4797-b31b-580b6581bad4"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        symboling  normalized-losses  wheel-base      length       width  \\\n","count  201.000000          201.00000  201.000000  201.000000  201.000000   \n","mean     0.840796          122.00000   98.797015    0.837102    0.915126   \n","std      1.254802           31.99625    6.066366    0.059213    0.029187   \n","min     -2.000000           65.00000   86.600000    0.678039    0.837500   \n","25%      0.000000          101.00000   94.500000    0.801538    0.890278   \n","50%      1.000000          122.00000   97.000000    0.832292    0.909722   \n","75%      2.000000          137.00000  102.400000    0.881788    0.925000   \n","max      3.000000          256.00000  120.900000    1.000000    1.000000   \n","\n","           height  curb-weight  engine-size        bore  compression-ratio  \\\n","count  201.000000   201.000000   201.000000  201.000000         201.000000   \n","mean    53.766667  2555.666667   126.875622    3.330692          10.164279   \n","std      2.447822   517.296727    41.546834    0.268072           4.004965   \n","min     47.800000  1488.000000    61.000000    2.540000           7.000000   \n","25%     52.000000  2169.000000    98.000000    3.150000           8.600000   \n","50%     54.100000  2414.000000   120.000000    3.310000           9.000000   \n","75%     55.500000  2926.000000   141.000000    3.580000           9.400000   \n","max     59.800000  4066.000000   326.000000    3.940000          23.000000   \n","\n","       horsepower     peak-rpm    city-mpg  highway-mpg         price  \\\n","count  201.000000   201.000000  201.000000   201.000000    201.000000   \n","mean   103.405534  5117.665368   25.179104    30.686567  13207.129353   \n","std     37.365700   478.113805    6.423220     6.815150   7947.066342   \n","min     48.000000  4150.000000   13.000000    16.000000   5118.000000   \n","25%     70.000000  4800.000000   19.000000    25.000000   7775.000000   \n","50%     95.000000  5125.369458   24.000000    30.000000  10295.000000   \n","75%    116.000000  5500.000000   30.000000    34.000000  16500.000000   \n","max    262.000000  6600.000000   49.000000    54.000000  45400.000000   \n","\n","       city-L/100km      diesel         gas  \n","count    201.000000  201.000000  201.000000  \n","mean       9.944145    0.099502    0.900498  \n","std        2.534599    0.300083    0.300083  \n","min        4.795918    0.000000    0.000000  \n","25%        7.833333    0.000000    1.000000  \n","50%        9.791667    0.000000    1.000000  \n","75%       12.368421    0.000000    1.000000  \n","max       18.076923    1.000000    1.000000  "],"text/html":["\n","  <div id=\"df-28d4af5d-e372-46f0-a8a7-4d88a99190f2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symboling</th>\n","      <th>normalized-losses</th>\n","      <th>wheel-base</th>\n","      <th>length</th>\n","      <th>width</th>\n","      <th>height</th>\n","      <th>curb-weight</th>\n","      <th>engine-size</th>\n","      <th>bore</th>\n","      <th>compression-ratio</th>\n","      <th>horsepower</th>\n","      <th>peak-rpm</th>\n","      <th>city-mpg</th>\n","      <th>highway-mpg</th>\n","      <th>price</th>\n","      <th>city-L/100km</th>\n","      <th>diesel</th>\n","      <th>gas</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>201.000000</td>\n","      <td>201.00000</td>\n","      <td>201.000000</td>\n","      <td>201.000000</td>\n","      <td>201.000000</td>\n","      <td>201.000000</td>\n","      <td>201.000000</td>\n","      <td>201.000000</td>\n","      <td>201.000000</td>\n","      <td>201.000000</td>\n","      <td>201.000000</td>\n","      <td>201.000000</td>\n","      <td>201.000000</td>\n","      <td>201.000000</td>\n","      <td>201.000000</td>\n","      <td>201.000000</td>\n","      <td>201.000000</td>\n","      <td>201.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.840796</td>\n","      <td>122.00000</td>\n","      <td>98.797015</td>\n","      <td>0.837102</td>\n","      <td>0.915126</td>\n","      <td>53.766667</td>\n","      <td>2555.666667</td>\n","      <td>126.875622</td>\n","      <td>3.330692</td>\n","      <td>10.164279</td>\n","      <td>103.405534</td>\n","      <td>5117.665368</td>\n","      <td>25.179104</td>\n","      <td>30.686567</td>\n","      <td>13207.129353</td>\n","      <td>9.944145</td>\n","      <td>0.099502</td>\n","      <td>0.900498</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.254802</td>\n","      <td>31.99625</td>\n","      <td>6.066366</td>\n","      <td>0.059213</td>\n","      <td>0.029187</td>\n","      <td>2.447822</td>\n","      <td>517.296727</td>\n","      <td>41.546834</td>\n","      <td>0.268072</td>\n","      <td>4.004965</td>\n","      <td>37.365700</td>\n","      <td>478.113805</td>\n","      <td>6.423220</td>\n","      <td>6.815150</td>\n","      <td>7947.066342</td>\n","      <td>2.534599</td>\n","      <td>0.300083</td>\n","      <td>0.300083</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>-2.000000</td>\n","      <td>65.00000</td>\n","      <td>86.600000</td>\n","      <td>0.678039</td>\n","      <td>0.837500</td>\n","      <td>47.800000</td>\n","      <td>1488.000000</td>\n","      <td>61.000000</td>\n","      <td>2.540000</td>\n","      <td>7.000000</td>\n","      <td>48.000000</td>\n","      <td>4150.000000</td>\n","      <td>13.000000</td>\n","      <td>16.000000</td>\n","      <td>5118.000000</td>\n","      <td>4.795918</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>101.00000</td>\n","      <td>94.500000</td>\n","      <td>0.801538</td>\n","      <td>0.890278</td>\n","      <td>52.000000</td>\n","      <td>2169.000000</td>\n","      <td>98.000000</td>\n","      <td>3.150000</td>\n","      <td>8.600000</td>\n","      <td>70.000000</td>\n","      <td>4800.000000</td>\n","      <td>19.000000</td>\n","      <td>25.000000</td>\n","      <td>7775.000000</td>\n","      <td>7.833333</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.000000</td>\n","      <td>122.00000</td>\n","      <td>97.000000</td>\n","      <td>0.832292</td>\n","      <td>0.909722</td>\n","      <td>54.100000</td>\n","      <td>2414.000000</td>\n","      <td>120.000000</td>\n","      <td>3.310000</td>\n","      <td>9.000000</td>\n","      <td>95.000000</td>\n","      <td>5125.369458</td>\n","      <td>24.000000</td>\n","      <td>30.000000</td>\n","      <td>10295.000000</td>\n","      <td>9.791667</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2.000000</td>\n","      <td>137.00000</td>\n","      <td>102.400000</td>\n","      <td>0.881788</td>\n","      <td>0.925000</td>\n","      <td>55.500000</td>\n","      <td>2926.000000</td>\n","      <td>141.000000</td>\n","      <td>3.580000</td>\n","      <td>9.400000</td>\n","      <td>116.000000</td>\n","      <td>5500.000000</td>\n","      <td>30.000000</td>\n","      <td>34.000000</td>\n","      <td>16500.000000</td>\n","      <td>12.368421</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>3.000000</td>\n","      <td>256.00000</td>\n","      <td>120.900000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>59.800000</td>\n","      <td>4066.000000</td>\n","      <td>326.000000</td>\n","      <td>3.940000</td>\n","      <td>23.000000</td>\n","      <td>262.000000</td>\n","      <td>6600.000000</td>\n","      <td>49.000000</td>\n","      <td>54.000000</td>\n","      <td>45400.000000</td>\n","      <td>18.076923</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-28d4af5d-e372-46f0-a8a7-4d88a99190f2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-28d4af5d-e372-46f0-a8a7-4d88a99190f2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-28d4af5d-e372-46f0-a8a7-4d88a99190f2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fb6db940-be4d-42ef-8f93-a53693b685d5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fb6db940-be4d-42ef-8f93-a53693b685d5')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fb6db940-be4d-42ef-8f93-a53693b685d5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["# **Step 6 Univariate Analysis**"],"metadata":{"id":"TIS7w8DRz6Gi"}},{"cell_type":"code","source":["plt.figure(figsize=(10,8))\n","df_automobile[['engine-size','peak-rpm','curb-weight','horsepower','price']].hist(figsize=(10,8))\n","plt.figure(figsize=(10,8))\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":734},"id":"wNGVqrJiz84x","executionInfo":{"status":"ok","timestamp":1696408273186,"user_tz":-330,"elapsed":2197,"user":{"displayName":"Ganesh Tekale","userId":"18033307216629587681"}},"outputId":"a795ef1c-7df3-42ce-ee24-8f30013ce87d"},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 0 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 6 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 0 Axes>"]},"metadata":{}}]},{"cell_type":"markdown","source":["# **Step 7 Findings**\n","\n","1.  Most of car has curb weight is in range of 1900 to 3100\n","2. The engine size in range 60 to 190\n","3.   List item"],"metadata":{"id":"eoKBKsDo0EMq"}},{"cell_type":"code","source":["# Write a Program in Python to Find Stress in 2 D Plate\n","\n","\n","f=int(input(\"Enter the Value of Force in N \"))\n","w=int(input(\"Enter the Value of Width of Plate in mm \"))\n","h=int(input(\"Enter the Value of Height of Plate in mm \"))\n","s=f/(h*w)\n","print(\"The Value of Stress Induced in the Plate will be N/mm2\",s)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"S7fGtnS30PYa","executionInfo":{"status":"ok","timestamp":1696408405447,"user_tz":-330,"elapsed":51576,"user":{"displayName":"Ganesh Tekale","userId":"18033307216629587681"}},"outputId":"48d3b74d-5a6a-4d3e-b9be-42700e304d06"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the Value of Force in N 2600\n","Enter the Value of Width of Plate in mm 233\n","Enter the Value of Height of Plate in mm 352\n","The Value of Stress Induced in the Plate will be N/mm2 0.03170113148653921\n"]}]},{"cell_type":"code","source":["# Write a Program in Python to Find Stiffness of the Helical Coil Compression Spring"],"metadata":{"id":"8Mkv9bh40i1q","executionInfo":{"status":"ok","timestamp":1696408419092,"user_tz":-330,"elapsed":5,"user":{"displayName":"Ganesh Tekale","userId":"18033307216629587681"}}},"execution_count":19,"outputs":[]}]}